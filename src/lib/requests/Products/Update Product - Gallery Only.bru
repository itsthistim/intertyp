meta {
  name: Update Product - Gallery Only
  type: http
  seq: 6
}

put {
  url: http://localhost:4321/api/produkte/buchstaben
  body: json
  auth: none
}

body:json {
  {
    "gallery": {
      "title": "Buchstaben & Schriftz체ge",
      "images": [
        {
          "url": "https://images.unsplash.com/photo-1586953208448-b95a79798f07?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
          "alt": "3D Metallbuchstaben an Geb채udewand",
          "width": 1000,
          "height": 667
        },
        {
          "url": "https://images.unsplash.com/photo-1607734834512-6ab25691b120?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
          "alt": "Leuchtende Einzelbuchstaben bei Nacht",
          "width": 1000,
          "height": 667
        },
        {
          "url": "https://images.unsplash.com/photo-1571902943202-507ec2618e8f?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
          "alt": "Verschiedene Materialien f체r Buchstaben",
          "width": 1000,
          "height": 667
        }
      ]
    }
  }
}

tests {
  test("Response status is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response contains updated gallery", function() {
    const jsonData = res.getBody();
    expect(jsonData.gallery).to.be.an('object');
    expect(jsonData.gallery.title).to.equal("Buchstaben & Schriftz체ge");
    expect(jsonData.gallery.images).to.be.an('array');
    expect(jsonData.gallery.images.length).to.equal(3);
  });

  test("Gallery images have alt text", function() {
    const jsonData = res.getBody();
    jsonData.gallery.images.forEach(function(image) {
      expect(image).to.have.property('alt');
      expect(image.alt).to.be.a('string');
      // Alt text can be empty string, but must not be null or undefined
    });
  });

  test("Gallery images have valid URLs", function() {
    const jsonData = res.getBody();
    jsonData.gallery.images.forEach(function(image) {
      expect(image.url).to.match(/^https?:\/\/.+/);
    });
  });

  test("Gallery images have valid dimensions", function() {
    const jsonData = res.getBody();
    jsonData.gallery.images.forEach(function(image) {
      expect(image).to.have.property('width').that.is.a('number').and.is.greaterThan(0);
      expect(image).to.have.property('height').that.is.a('number').and.is.greaterThan(0);
    });
  });

  test("Response still contains original title and description", function() {
    const jsonData = res.getBody();
    expect(jsonData.title).to.be.a('string');
    expect(jsonData.description).to.be.a('string');
  });

  test("Response contains link object", function() {
    const jsonData = res.getBody();
    expect(jsonData.link).to.be.an('object');
    expect(jsonData.link.slug).to.equal("/produkte/buchstaben");
  });

  test("Response time is acceptable", function() {
    expect(res.getResponseTime()).to.be.lessThan(2000); // 2 seconds
  });

  test("Response has correct content type", function() {
    const contentType = res.getHeader('Content-Type') || res.getHeader('content-type');
    expect(contentType).to.exist;
    expect(contentType).to.be.a('string');
    expect(contentType).to.contain('application/json');
  });

  test("Response contains expected fields", function() {
    expect(res.getBody()).to.have.all.keys('title', 'description', 'link', 'cover_image', 'gallery');
  });

  test("Response is not empty", function() {
    expect(res.getBody()).to.not.be.empty;
  });
}
