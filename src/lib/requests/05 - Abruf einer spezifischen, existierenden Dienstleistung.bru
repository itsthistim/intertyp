meta {
  name: 05 - Abruf einer spezifischen, existierenden Dienstleistung
  type: http
  seq: 5
}

get {
  url: {{baseUrl}}/api/produkte/pokale
  body: none
  auth: none
}

tests {
  test("Response status is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response contains product data", function() {
    const jsonData = res.getBody();
    expect(jsonData).to.have.property('title');
    expect(jsonData).to.have.property('description');
    expect(jsonData).to.have.property('link');
    expect(jsonData.title).to.be.a('string');
    expect(jsonData.description).to.be.a('string');
    expect(jsonData.link).to.be.an('object');
  });
  
  test("Response contains link with correct slug", function() {
    const jsonData = res.getBody();
    expect(jsonData.link.slug).to.equal("/produkte/pokale");
  });
  
  test("Cover image has alt text if present", function() {
    const jsonData = res.getBody();
    if (jsonData.cover_image) {
      expect(jsonData.cover_image).to.have.property('alt');
      expect(jsonData.cover_image.alt).to.be.a('string');
    }
  });
  
  test("Gallery images have alt text if gallery exists", function() {
    const jsonData = res.getBody();
    if (jsonData.gallery && jsonData.gallery.images) {
      jsonData.gallery.images.forEach(function(image) {
        expect(image).to.have.property('alt');
        expect(image.alt).to.be.a('string');
      });
    }
  });
  
  test("Response time is acceptable", function() {
    expect(res.getResponseTime()).to.be.lessThan(2000); // 2 seconds
  });
  
  test("Response has correct content type", function() {
    const contentType = res.getHeader('Content-Type') || res.getHeader('content-type');
    expect(contentType).to.exist;
    expect(contentType).to.be.a('string');
    expect(contentType).to.contain('application/json');
  });
  
  test("Response contains expected fields", function() {
    expect(res.getBody()).to.have.all.keys('title', 'description', 'link', 'cover_image', 'gallery');
  });
  
  test("Response is not empty", function() {
    expect(res.getBody()).to.not.be.empty;
  });
}
