meta {
  name: Update Project - Clear Gallery
  type: http
  seq: 10
}

put {
  url: http://localhost:4321/api/projekte/gesundheit
  body: json
  auth: none
}

body:json {
  {
    "title": "Project with cleared gallery",
    "gallery": {
      "title": "Empty Gallery",
      "images": []
    }
  }
}

tests {
  test("Response status is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response contains updated title", function() {
    const jsonData = res.getBody();
    expect(jsonData.title).to.equal("Project with cleared gallery");
  });

  test("Response handles empty gallery gracefully", function() {
    const jsonData = res.getBody();
    // The API should handle empty galleries appropriately
    // Either by setting gallery to null or keeping empty structure
    if (jsonData.gallery !== null) {
      expect(jsonData.gallery).to.be.an('object');
    }
  });

  test("Response contains link object", function() {
    const jsonData = res.getBody();
    expect(jsonData.link).to.be.an('object');
    expect(jsonData.link.slug).to.equal("/projekte/gesundheit");
  });

  test("Response time is acceptable", function() {
    expect(res.getResponseTime()).to.be.lessThan(2000); // 2 seconds
  });

  test("Response has correct content type", function() {
    const contentType = res.getHeader('Content-Type') || res.getHeader('content-type');
    expect(contentType).to.exist;
    expect(contentType).to.be.a('string');
    expect(contentType).to.contain('application/json');
  });

  test("Response contains expected fields", function() {
    expect(res.getBody()).to.have.all.keys('title', 'description', 'project_date', 'link', 'cover_image', 'gallery');
  });

  test("Response is not empty", function() {
    expect(res.getBody()).to.not.be.empty;
  });
}
