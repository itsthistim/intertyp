meta {
  name: 22 - LÃ¶schung eines nicht existierenden Projekts
  type: http
  seq: 22
}

delete {
  url: {{baseUrl}}/api/projekte/nonexistent-project
  body: none
  auth: basic
}

auth:basic {
  username: {{apiUser}}
  password: {{apiPassword}}
}

tests {
  test("Response status is 404 (Not Found)", function() {
    // DELETE is now implemented, so we expect 404 Not Found for non-existing projects
    expect(res.getStatus()).to.equal(404);
  });

  test("Response contains error message", function() {
    const jsonData = res.getBody();
    expect(jsonData).to.have.property('error');
    expect(jsonData.error).to.be.a('string');
    expect(jsonData.error).to.contain('not found');
  });

  test("Response time is acceptable", function() {
    expect(res.getResponseTime()).to.be.lessThan(2000); // 2 seconds
  });

  test("Response has correct content type", function() {
    const contentType = res.getHeader('Content-Type') || res.getHeader('content-type');
    expect(contentType).to.exist;
    expect(contentType).to.be.a('string');
    expect(contentType).to.contain('application/json');
  });
}
