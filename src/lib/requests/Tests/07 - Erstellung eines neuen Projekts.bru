meta {
  name: 07 - Erstellung eines neuen Projekts
  type: http
  seq: 7
}

post {
  url: {{baseUrl}}/api/projekte/wifi
  body: json
  auth: basic
}

auth:basic {
  username: {{apiUser}}
  password: {{apiPassword}}
}

body:json {
  {
    "title": "WIFI Linz",
    "description": "Das Wirtschaftsförderungsinstitut WIFI ist eine österreichische Organisation der beruflichen Erwachsenenbildung. Pro Jahr werden über 30.000 Kurse von rund 350.000 Teilnehmern besucht. 12.000 Trainer kommen direkt aus der beruflichen Praxis.",
    "link": {
      "slug": "/projekte/wifi",
      "name": "WIFI Linz"
    },
    "cover_image": {
      "url": "https://www.wifi-ooe.at/fileadmin/_processed_/a/1/csm_ueber-uns_f72aaa5d07.jpg",
      "alt": "WIFI Linz Außen"
    },
    "gallery": {
      "images": [
        {
          "url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQUWRf66LWzMWlyakIy0CDiLhRfBuWP-QHmA&s"
        },
        {
          "url": "https://www.architektenkneidinger.at/assets/media/_688xAUTO_crop_center-center_none_ns/wifi_web02.jpg"
        },
        {
          "url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQC_l9uz6LWVCd7XnPIHLsn8mS090PUqJJpIw&s"
        },
        {
          "url": "https://www.wifi-ooe.at/fileadmin/_processed_/3/f/csm_WIFI_7_18_Metall_112.CR2.p_bc07cf15b2.jpg"
        },
        {
          "url": "https://webserver7.xtechnik.com/img/cache/2000_1500_prop/aHR0cDovL29mZmljZS54LXRlY2huaWsuY29tL3h0cmVkaW1nLzIwMTQvQmxlY2h0ZWNobmlrL0F1c2dhYmUxMDUvNjAyMC9LVUtBX1dJRklfMTA0XyhMYXJnZSkuanBn.jpg"
        },
        {
          "url": "https://imgcdn1.oe24.at/wifi.jfif/384x192Crop/0/637.547.105/637.547.071"
        },
        {
          "url": "https://media.tourdata.at/file/detailGalleryImg/3e0d224ecba44ca6ccdb1feaabc77704.jpg"
        }
      ]
    }
  }
  
}

tests {
  test("Response status is 201", function() {
    expect(res.getStatus()).to.equal(201);
  });
  
  test("Response contains created project data", function() {
    const jsonData = res.getBody();
    expect(jsonData).to.have.property('title');
    expect(jsonData.title).to.be.a('string').and.not.be.empty;
    expect(jsonData).to.have.property('description');
    expect(jsonData.description).to.be.a('string').and.not.be.empty;
  });
  
  test("Response contains valid link object", function() {
    const jsonData = res.getBody();
    expect(jsonData.link).to.be.an('object');
    expect(jsonData.link).to.have.property('slug');
    expect(jsonData.link.slug).to.be.a('string').and.not.be.empty;
    expect(jsonData.link).to.have.property('name');
    expect(jsonData.link.name).to.be.a('string').and.not.be.empty;
  });
  
  test("Cover image has required properties", function() {
    const jsonData = res.getBody();
    if (jsonData.cover_image) {
      expect(jsonData.cover_image).to.have.property('url');
      expect(jsonData.cover_image.url).to.be.a('string').and.not.be.empty;
      expect(jsonData.cover_image).to.have.property('alt');
      expect(jsonData.cover_image.alt).to.be.a('string');
    }
  });
  
  test("Response contains valid gallery", function() {
    const jsonData = res.getBody();
    expect(jsonData.gallery).to.be.an('object');
    expect(jsonData.gallery).to.have.property('images');
    expect(jsonData.gallery.images).to.be.an('array');
    expect(jsonData.gallery.images.length).to.be.greaterThan(0);
  });
  
  test("Gallery images have required properties", function() {
    const jsonData = res.getBody();
    jsonData.gallery.images.forEach(function(image) {
      expect(image).to.have.property('url');
      expect(image.url).to.be.a('string').and.not.be.empty;
    });
  });
  
  test("Response time is acceptable", function() {
    expect(res.getResponseTime()).to.be.lessThan(2000); // 2 seconds
  });
  
  test("Response has correct content type", function() {
    const contentType = res.getHeader('Content-Type') || res.getHeader('content-type');
    expect(contentType).to.exist;
    expect(contentType).to.be.a('string');
    expect(contentType).to.contain('application/json');
  });
  
  test("Response contains required fields", function() {
    const jsonData = res.getBody();
    expect(jsonData).to.have.property('title');
    expect(jsonData).to.have.property('description');
    expect(jsonData).to.have.property('link');
    expect(jsonData).to.have.property('gallery');
  });
  
  test("Response is not empty", function() {
    expect(res.getBody()).to.not.be.empty;
  });
}
